
application {
  # deprecated, use 'environment' instead
  env=dev
  environment="development"
  version="1.0"
  name="proteus"
  path="/v1"
  host="localhost"
  ports {
    http=8090
   # https=8443
  }
  charset="UTF-8"
  fallbackHandler="io.sinistral.proteus.server.handlers.ServerFallbackHandler"
  defaultResponseListener="io.sinistral.proteus.server.handlers.ServerDefaultResponseListener"
  jacksonModule="io.sinistral.proteus.modules.JacksonModule"
  xmlModule="io.sinistral.proteus.modules.XmlModule"
  tmpdir=${java.io.tmpdir}/${application.name}
  # path to default favicon file
  favicon="/io/sinistral/proteus/favicon.ico"
  services {
    timeout=2 minutes
  }
  shutdown {
    timeout=10 seconds
  }
}

api.version="v1"

globalHeaders 
{
#  Access-Control-Allow-Origin: "*"
#  Access-Control-Allow-Methods: "*"
#  Access-Control-Allow-Headers: "*"
  Server=${application.name}
}

health {
  statusPath="/health"
}

assets {
  # the base path assets will be server from
  path="/public"
  # the directory to load the assets from
  dir="./assets"
  cache {
    # cache timeout for the assets
    time=500
  }
}


openapi {

  basePath= ${application.path}"/openapi"

  redocPath= "redoc"

  port=${application.ports.http}

  specFilename="openapi"

  openapi="3.0.1"

  # openapi info
  info {
    title=${application.name}
    version=${application.version}
    description="Proteus Server"
  }

  securitySchemes {
    ApiKeyAuth={
     type="apiKey"
      in="header"
      name="X-API-KEY" 
    }
    BearerAuth= {
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
    }
  }

  servers=[
    { 
      url=${application.path}
      description="Default Server"  
    }
  ]

  converterClasses=[

  ]
}

jackson {

  jsonView={
    # a class that provides a mapping from the JsonView query parameter values to JsonView classes
    className=null
    # the name of the query parameter to use for JsonView class lookup
    queryParameterName="context"
  }

}


swagger {

  enabled=true

  # the path that has an index.html template and theme css files
  resourcePrefix="io/sinistral/proteus/server/tools/swagger"

  host=${application.host}
  # swagger version
  swagger="2.0"

  info {
    # swagger info title
    title=${application.name}
    # swagger info version
    version=${application.version} 
  }
 

  # swagger-ui theme from ostranme's swagger-ui-themes, the following are built-in [feeling-blue, flattop, material, monokai, muted, newspaper, outline]
  # specifying a different name causes the SwaggerService to search in {swagger.resourcePrefix}/themes for a file named "theme-{swagger.theme}.css"
  theme="default"
  # where the swagger endpoints will be mounted
  basePath= ${application.path}"/swagger"
  # where redoc will be mounted relative to swagger base path
  redocPath= "redoc"
  #the name of the spec file
  specFilename="swagger.json"
  
  consumes=["application/json"]
  
  produces=["application/json"]

  port=${application.ports.http}

  security =
  {
    apiKeys=[
        {
          key="defaultApiKey"
          in="HEADER",
          name="Authorization"
          value="123456789"
        }
    ]

#    basicRealms =
#    [
#      {
#        name=defaultBasic 
#        identities=
#        [
#          "username:password"
#        ]
#      }
#    ]
  }
}

undertow
{
  # refer to https://undertow.io/javadoc/2.0.x/io/undertow/UndertowOptions.html for details
  server {
    alwaysSetDate=true
    alwaysSetKeepAlive=false
    recordRequestStartTime=false 
    maxEntitySize=512M
    bufferPipelinedData=false
    enableHttp2=true,
    maxBufferedRequestSize=16384
    virtualThreads=false
    # wrap root controller in graceful shutdown handler
    gracefuleShutdown=true
  }

  # refer to https://docs.jboss.org/xnio/3.0/api/org/xnio/Options.html for details
  socket {
    backlog=10000
    reuseAddresses=true
    readTimeout=90000
    writeTimeout=90000
  }

 
  ssl { 
      enabled=false
      keystorePath="development.jks"
      truststorePath="development.ts"
      keystorePassword="password"
      truststorePassword="password" 
  }

  # x AvailableProcessors
  ioThreadsMultiplier=2
  workerThreadsMultiplier=10
  bufferSize=16k
  directBuffers=true
}
