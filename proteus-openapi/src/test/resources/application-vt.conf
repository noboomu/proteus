
application {
 
  env = dev

  version = "1.0"

  name="proteus" 

  path = "/v1"

  host = "localhost"
 
  ports {
    http = 0
   # https = 8443
  }

  charset = UTF-8
 
  fallbackHandler = "io.sinistral.proteus.server.handlers.ServerFallbackHandler"

  defaultResponseListener = "io.sinistral.proteus.server.handlers.ServerDefaultResponseListener"

  jacksonModule = "io.sinistral.proteus.modules.JacksonModule"

  tmpdir = ${java.io.tmpdir}/${application.name}

  # path to default favicon file
  favicon = "/io/sinistral/proteus/favicon.ico"
  
}

api.version="v1"

globalHeaders 
{
#  Access-Control-Allow-Origin: "*"
#  Access-Control-Allow-Methods: "*"
#  Access-Control-Allow-Headers: "*"
  Server = ${application.name}
}

assets {
  # the base path assets will be server from
  path = "/public"
  # the directory to load the assets from
  dir = "./assets"
  cache {
    # cache timeout for the assets
    time = 500
  }
 

}

test.wrapper.value = "testValue"

jackson {

  jsonView = {
    # a class that provides a mapping from the JsonView query parameter values to JsonView classes
    className = null
    # the name of the query parameter to use for JsonView class lookup
    queryParameterName = "context"
  }

}

undertow
{
  server {
    enableHttp2 = false
    alwaysSetDate = true
    alwaysSetKeepAlive = false
    recordRequestStartTime = false 
    maxEntitySize = 100M
    bufferPipelinedData = false
    virtualThreads = true
    maxBufferedRequestSize = 16384
    # wrap root controller in graceful shutdown handler
    gracefuleShutdown=true
  }

  socket {
    backlog = 10000
       readTimeout = 90000
    writeTimeout = 90000
  }

 
  ssl { 
      enabled=false
      keystorePath="development.jks"
      truststorePath="development.ts"
      keystorePassword="password"
      truststorePassword="password" 
  }

  # x AvailableProcessors
  ioThreadsMultiplier = 2
  workerThreadsMultiplier = 12
  bufferSize = 16K
  directBuffers = true
}
 
 